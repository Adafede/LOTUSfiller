
mongodump --db=NPOC2021 --out=NPOC2021 --excludeCollection lOTUSSourceNaturalProduct



#####################
extract latest lotus ids:
mongoexport --db NPOC2021 --collection lotusUniqueNaturalProduct --type=csv --fields lotus_id,inchikey --out lotus_ids_march2021.txt



######################
extract data for download

java -Xmx16288m -jar lotusfiller-0.0.1-SNAPSHOT.jar generateTSV
java -Xmx16288m -jar lotusfiller-0.0.1-SNAPSHOT.jar generateSDF


mv LOTUS_2021_02.tsv LOTUS_2021_03.tsv
mv LOTUS_2021_02.sdf LOTUS_2021_03.sdf

cp LOTUS_2021_03.tsv lotus.smiles
cp LOTUS_2021_03.sdf np.sdf


######################
# run all from scratch

java -Xmx16288m -jar lotusfiller-0.0.1-SNAPSHOT.jar ~/Projects/NP/LOTUSonline/LOTUSfiller/data ~/Projects/NP/LOTUSonline/LOTUSfiller/fragments/fragment_without_sugar.txt ~/Projects/NP/LOTUSonline/LOTUSfiller/fragments/fragment_with_sugar.txt  > latest.logs.october13.txt &


java -jar lotusfiller-0.0.1-SNAPSHOT.jar data fragments/fragment_without_sugar.txt fragments/fragment_with_sugar.txt > latest.logs.october13.txt &

disown xxxx


# on ponder:
java -Xmx16288m -jar lotusfiller-0.0.1-SNAPSHOT.jar /media/data_drive_big/maria/Projects/NP/LOTUSonline/LOTUSfiller/data/platinum.tsv /media/data_drive_big/maria/Projects/NP/LOTUSonline/LOTUSfiller/fragments/fragment_without_sugar.txt /media/data_drive_big/maria/Projects/NP/LOTUSonline/LOTUSfiller/fragments/fragment_with_sugar.txt importLOTUSids /media/data_drive_big/maria/Projects/NP/LOTUSonline/LOTUSfiller/lotus_ids_march2021.txt > latest.logs.mar12.txt &





## add metadata 

java -Xmx16288m -jar lotusfiller-0.0.1-SNAPSHOT.jar  addMetadata /media/data_drive_big/maria/Projects/NP/LOTUSonline/LOTUSfiller/data/210223_frozen_metadata.tsv &

#######################

docker exec -it npoc-mongo-db bash

cd mongodata/NPOC2021/NPOC2021/

mongorestore --port 27019 --db=NPOC2021 --noIndexRestore .


mongo --port 27019
use NPOC2021


 db.lOTUSSourceNaturalProduct.createIndex( {inchi3D:"hashed"})
 db.lOTUSSourceNaturalProduct.createIndex( {inchikey3D: "hashed"})
 db.lOTUSSourceNaturalProduct.createIndex( {inchikey2D:1})
 db.lOTUSSourceNaturalProduct.createIndex( {smiles3D:"hashed"})
 db.lOTUSSourceNaturalProduct.createIndex( {smiles2D:"hashed"})

db.lotusUniqueNaturalProduct.createIndex( {inchi:"hashed"})
db.lotusUniqueNaturalProduct.createIndex( {inchikey:1})
db.lotusUniqueNaturalProduct.createIndex( {smiles: "hashed"})
db.lotusUniqueNaturalProduct.createIndex( {inchi2D:"hashed"})
db.lotusUniqueNaturalProduct.createIndex( {inchikey2D:1})
db.lotusUniqueNaturalProduct.createIndex( {smiles2D: "hashed"})
db.lotusUniqueNaturalProduct.createIndex( {molecular_formula:1})
db.lotusUniqueNaturalProduct.createIndex( {lotus_id:1})
db.lotusUniqueNaturalProduct.createIndex( {fragmentsWithSugar:"hashed"})
db.lotusUniqueNaturalProduct.createIndex( {fragments:"hashed"})

TODO: add taxonomy as text searcheable!

db.runCommand(
  {
    createIndexes: 'lotusUniqueNaturalProduct',
    indexes: [
        {
            key: {
                iupac_name:"text", traditional_name:"text", allTaxa:"text"
            },
            name: "superTextIndex",
	    weights: { name:10, synonyms:5  }
        }

    ]
  }
)




db.lotusUniqueNaturalProduct.createIndex( {npl_score:1})

db.lotusUniqueNaturalProduct.createIndex( { pubchemBits : "hashed" } )


db.lotusUniqueNaturalProduct.createIndex( {deep_smiles: "hashed"})
db.lotusUniqueNaturalProduct.createIndex( { "pfCounts.bits" :1} )
db.lotusUniqueNaturalProduct.createIndex( { "pfCounts.count" : 1 })




db.fragment.createIndex({signature:1})
db.fragment.createIndex({signature:1, withsugar:-1})


